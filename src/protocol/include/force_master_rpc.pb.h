// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: force_master_rpc.proto

#ifndef PROTOBUF_INCLUDED_force_5fmaster_5frpc_2eproto
#define PROTOBUF_INCLUDED_force_5fmaster_5frpc_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_force_5fmaster_5frpc_2eproto 

namespace protobuf_force_5fmaster_5frpc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_force_5fmaster_5frpc_2eproto
namespace ForceMasterRpc {
class CartPosition;
class CartPositionDefaultTypeInternal;
extern CartPositionDefaultTypeInternal _CartPosition_default_instance_;
class JointPosition;
class JointPositionDefaultTypeInternal;
extern JointPositionDefaultTypeInternal _JointPosition_default_instance_;
class Level;
class LevelDefaultTypeInternal;
extern LevelDefaultTypeInternal _Level_default_instance_;
class ResponseCartPosition;
class ResponseCartPositionDefaultTypeInternal;
extern ResponseCartPositionDefaultTypeInternal _ResponseCartPosition_default_instance_;
class ResponseCommon;
class ResponseCommonDefaultTypeInternal;
extern ResponseCommonDefaultTypeInternal _ResponseCommon_default_instance_;
class ResponseJointPosition;
class ResponseJointPositionDefaultTypeInternal;
extern ResponseJointPositionDefaultTypeInternal _ResponseJointPosition_default_instance_;
class ResponseLevel;
class ResponseLevelDefaultTypeInternal;
extern ResponseLevelDefaultTypeInternal _ResponseLevel_default_instance_;
class ResponseSensorStatus;
class ResponseSensorStatusDefaultTypeInternal;
extern ResponseSensorStatusDefaultTypeInternal _ResponseSensorStatus_default_instance_;
class ResponseTrajectoryReconstructionInfo;
class ResponseTrajectoryReconstructionInfoDefaultTypeInternal;
extern ResponseTrajectoryReconstructionInfoDefaultTypeInternal _ResponseTrajectoryReconstructionInfo_default_instance_;
class TrajectoryReconstructionInfo;
class TrajectoryReconstructionInfoDefaultTypeInternal;
extern TrajectoryReconstructionInfoDefaultTypeInternal _TrajectoryReconstructionInfo_default_instance_;
}  // namespace ForceMasterRpc
namespace google {
namespace protobuf {
template<> ::ForceMasterRpc::CartPosition* Arena::CreateMaybeMessage<::ForceMasterRpc::CartPosition>(Arena*);
template<> ::ForceMasterRpc::JointPosition* Arena::CreateMaybeMessage<::ForceMasterRpc::JointPosition>(Arena*);
template<> ::ForceMasterRpc::Level* Arena::CreateMaybeMessage<::ForceMasterRpc::Level>(Arena*);
template<> ::ForceMasterRpc::ResponseCartPosition* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseCartPosition>(Arena*);
template<> ::ForceMasterRpc::ResponseCommon* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(Arena*);
template<> ::ForceMasterRpc::ResponseJointPosition* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseJointPosition>(Arena*);
template<> ::ForceMasterRpc::ResponseLevel* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseLevel>(Arena*);
template<> ::ForceMasterRpc::ResponseSensorStatus* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseSensorStatus>(Arena*);
template<> ::ForceMasterRpc::ResponseTrajectoryReconstructionInfo* Arena::CreateMaybeMessage<::ForceMasterRpc::ResponseTrajectoryReconstructionInfo>(Arena*);
template<> ::ForceMasterRpc::TrajectoryReconstructionInfo* Arena::CreateMaybeMessage<::ForceMasterRpc::TrajectoryReconstructionInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ForceMasterRpc {

enum MessageType {
  None = 0,
  Poweroff = 1,
  StartRobot = 2,
  CloseRobot = 3,
  GetSensorStatus = 4,
  TractionForce_SetLevel = 5,
  TractionForce_GetLevel = 6,
  TrajectoryReconstruction_Open = 7,
  TrajectoryReconstruction_Close = 8,
  TrajectoryReconstruction_SetInfo = 9,
  TrajectoryReconstruction_GetInfo = 10,
  TrajectoryReconstruction_Start = 11,
  TrajectoryReconstruction_End = 12,
  ImpedanceMotion_Open = 13,
  ImpedanceMotion_Close = 14,
  ImpedanceMotion_SetRangelevel = 15,
  ImpedanceMotion_GetRangelevel = 16,
  GetJointPosition = 17,
  GetCartPosition = 18,
  SetCartPosition = 19,
  HeartBeat = 20,
  TrajectoryReconstruction_SetSpeedRatio = 21,
  TrajectoryReconstruction_GetSpeedRatio = 22,
  TrajectoryReconstruction_SetRepeatCount = 23,
  TrajectoryReconstruction_GetRepeatCount = 24,
  RemotePulling_Open = 25,
  RemotePulling_Close = 26,
  OmegaPulling_Open = 27,
  OmegaPulling_Close = 28,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = None;
const MessageType MessageType_MAX = OmegaPulling_Close;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class JointPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.JointPosition) */ {
 public:
  JointPosition();
  virtual ~JointPosition();

  JointPosition(const JointPosition& from);

  inline JointPosition& operator=(const JointPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JointPosition(JointPosition&& from) noexcept
    : JointPosition() {
    *this = ::std::move(from);
  }

  inline JointPosition& operator=(JointPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JointPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JointPosition* internal_default_instance() {
    return reinterpret_cast<const JointPosition*>(
               &_JointPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(JointPosition* other);
  friend void swap(JointPosition& a, JointPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JointPosition* New() const final {
    return CreateMaybeMessage<JointPosition>(NULL);
  }

  JointPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JointPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JointPosition& from);
  void MergeFrom(const JointPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double joint = 2;
  int joint_size() const;
  void clear_joint();
  static const int kJointFieldNumber = 2;
  double joint(int index) const;
  void set_joint(int index, double value);
  void add_joint(double value);
  const ::google::protobuf::RepeatedField< double >&
      joint() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_joint();

  // int32 joint_num = 1;
  void clear_joint_num();
  static const int kJointNumFieldNumber = 1;
  ::google::protobuf::int32 joint_num() const;
  void set_joint_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.JointPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > joint_;
  mutable int _joint_cached_byte_size_;
  ::google::protobuf::int32 joint_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Level : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.Level) */ {
 public:
  Level();
  virtual ~Level();

  Level(const Level& from);

  inline Level& operator=(const Level& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Level(Level&& from) noexcept
    : Level() {
    *this = ::std::move(from);
  }

  inline Level& operator=(Level&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Level& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Level* internal_default_instance() {
    return reinterpret_cast<const Level*>(
               &_Level_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Level* other);
  friend void swap(Level& a, Level& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Level* New() const final {
    return CreateMaybeMessage<Level>(NULL);
  }

  Level* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Level>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Level& from);
  void MergeFrom(const Level& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Level* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.Level)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CartPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.CartPosition) */ {
 public:
  CartPosition();
  virtual ~CartPosition();

  CartPosition(const CartPosition& from);

  inline CartPosition& operator=(const CartPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CartPosition(CartPosition&& from) noexcept
    : CartPosition() {
    *this = ::std::move(from);
  }

  inline CartPosition& operator=(CartPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CartPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CartPosition* internal_default_instance() {
    return reinterpret_cast<const CartPosition*>(
               &_CartPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CartPosition* other);
  friend void swap(CartPosition& a, CartPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CartPosition* New() const final {
    return CreateMaybeMessage<CartPosition>(NULL);
  }

  CartPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CartPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CartPosition& from);
  void MergeFrom(const CartPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CartPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // double a = 4;
  void clear_a();
  static const int kAFieldNumber = 4;
  double a() const;
  void set_a(double value);

  // double b = 5;
  void clear_b();
  static const int kBFieldNumber = 5;
  double b() const;
  void set_b(double value);

  // double c = 6;
  void clear_c();
  static const int kCFieldNumber = 6;
  double c() const;
  void set_c(double value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.CartPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  double a_;
  double b_;
  double c_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseCartPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseCartPosition) */ {
 public:
  ResponseCartPosition();
  virtual ~ResponseCartPosition();

  ResponseCartPosition(const ResponseCartPosition& from);

  inline ResponseCartPosition& operator=(const ResponseCartPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseCartPosition(ResponseCartPosition&& from) noexcept
    : ResponseCartPosition() {
    *this = ::std::move(from);
  }

  inline ResponseCartPosition& operator=(ResponseCartPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseCartPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseCartPosition* internal_default_instance() {
    return reinterpret_cast<const ResponseCartPosition*>(
               &_ResponseCartPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ResponseCartPosition* other);
  friend void swap(ResponseCartPosition& a, ResponseCartPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseCartPosition* New() const final {
    return CreateMaybeMessage<ResponseCartPosition>(NULL);
  }

  ResponseCartPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseCartPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseCartPosition& from);
  void MergeFrom(const ResponseCartPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseCartPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ForceMasterRpc.ResponseCommon header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::ForceMasterRpc::ResponseCommon& _internal_header() const;
  public:
  const ::ForceMasterRpc::ResponseCommon& header() const;
  ::ForceMasterRpc::ResponseCommon* release_header();
  ::ForceMasterRpc::ResponseCommon* mutable_header();
  void set_allocated_header(::ForceMasterRpc::ResponseCommon* header);

  // .ForceMasterRpc.CartPosition position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::ForceMasterRpc::CartPosition& _internal_position() const;
  public:
  const ::ForceMasterRpc::CartPosition& position() const;
  ::ForceMasterRpc::CartPosition* release_position();
  ::ForceMasterRpc::CartPosition* mutable_position();
  void set_allocated_position(::ForceMasterRpc::CartPosition* position);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseCartPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ForceMasterRpc::ResponseCommon* header_;
  ::ForceMasterRpc::CartPosition* position_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseCommon) */ {
 public:
  ResponseCommon();
  virtual ~ResponseCommon();

  ResponseCommon(const ResponseCommon& from);

  inline ResponseCommon& operator=(const ResponseCommon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseCommon(ResponseCommon&& from) noexcept
    : ResponseCommon() {
    *this = ::std::move(from);
  }

  inline ResponseCommon& operator=(ResponseCommon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseCommon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseCommon* internal_default_instance() {
    return reinterpret_cast<const ResponseCommon*>(
               &_ResponseCommon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ResponseCommon* other);
  friend void swap(ResponseCommon& a, ResponseCommon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseCommon* New() const final {
    return CreateMaybeMessage<ResponseCommon>(NULL);
  }

  ResponseCommon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseCommon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseCommon& from);
  void MergeFrom(const ResponseCommon& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error_str = 2;
  void clear_error_str();
  static const int kErrorStrFieldNumber = 2;
  const ::std::string& error_str() const;
  void set_error_str(const ::std::string& value);
  #if LANG_CXX11
  void set_error_str(::std::string&& value);
  #endif
  void set_error_str(const char* value);
  void set_error_str(const char* value, size_t size);
  ::std::string* mutable_error_str();
  ::std::string* release_error_str();
  void set_allocated_error_str(::std::string* error_str);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseCommon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_str_;
  bool is_successful_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseJointPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseJointPosition) */ {
 public:
  ResponseJointPosition();
  virtual ~ResponseJointPosition();

  ResponseJointPosition(const ResponseJointPosition& from);

  inline ResponseJointPosition& operator=(const ResponseJointPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseJointPosition(ResponseJointPosition&& from) noexcept
    : ResponseJointPosition() {
    *this = ::std::move(from);
  }

  inline ResponseJointPosition& operator=(ResponseJointPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseJointPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseJointPosition* internal_default_instance() {
    return reinterpret_cast<const ResponseJointPosition*>(
               &_ResponseJointPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ResponseJointPosition* other);
  friend void swap(ResponseJointPosition& a, ResponseJointPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseJointPosition* New() const final {
    return CreateMaybeMessage<ResponseJointPosition>(NULL);
  }

  ResponseJointPosition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseJointPosition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseJointPosition& from);
  void MergeFrom(const ResponseJointPosition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseJointPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ForceMasterRpc.ResponseCommon header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::ForceMasterRpc::ResponseCommon& _internal_header() const;
  public:
  const ::ForceMasterRpc::ResponseCommon& header() const;
  ::ForceMasterRpc::ResponseCommon* release_header();
  ::ForceMasterRpc::ResponseCommon* mutable_header();
  void set_allocated_header(::ForceMasterRpc::ResponseCommon* header);

  // .ForceMasterRpc.JointPosition position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::ForceMasterRpc::JointPosition& _internal_position() const;
  public:
  const ::ForceMasterRpc::JointPosition& position() const;
  ::ForceMasterRpc::JointPosition* release_position();
  ::ForceMasterRpc::JointPosition* mutable_position();
  void set_allocated_position(::ForceMasterRpc::JointPosition* position);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseJointPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ForceMasterRpc::ResponseCommon* header_;
  ::ForceMasterRpc::JointPosition* position_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseLevel) */ {
 public:
  ResponseLevel();
  virtual ~ResponseLevel();

  ResponseLevel(const ResponseLevel& from);

  inline ResponseLevel& operator=(const ResponseLevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseLevel(ResponseLevel&& from) noexcept
    : ResponseLevel() {
    *this = ::std::move(from);
  }

  inline ResponseLevel& operator=(ResponseLevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseLevel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseLevel* internal_default_instance() {
    return reinterpret_cast<const ResponseLevel*>(
               &_ResponseLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ResponseLevel* other);
  friend void swap(ResponseLevel& a, ResponseLevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseLevel* New() const final {
    return CreateMaybeMessage<ResponseLevel>(NULL);
  }

  ResponseLevel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseLevel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseLevel& from);
  void MergeFrom(const ResponseLevel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ForceMasterRpc.ResponseCommon header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::ForceMasterRpc::ResponseCommon& _internal_header() const;
  public:
  const ::ForceMasterRpc::ResponseCommon& header() const;
  ::ForceMasterRpc::ResponseCommon* release_header();
  ::ForceMasterRpc::ResponseCommon* mutable_header();
  void set_allocated_header(::ForceMasterRpc::ResponseCommon* header);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseLevel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ForceMasterRpc::ResponseCommon* header_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseTrajectoryReconstructionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseTrajectoryReconstructionInfo) */ {
 public:
  ResponseTrajectoryReconstructionInfo();
  virtual ~ResponseTrajectoryReconstructionInfo();

  ResponseTrajectoryReconstructionInfo(const ResponseTrajectoryReconstructionInfo& from);

  inline ResponseTrajectoryReconstructionInfo& operator=(const ResponseTrajectoryReconstructionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseTrajectoryReconstructionInfo(ResponseTrajectoryReconstructionInfo&& from) noexcept
    : ResponseTrajectoryReconstructionInfo() {
    *this = ::std::move(from);
  }

  inline ResponseTrajectoryReconstructionInfo& operator=(ResponseTrajectoryReconstructionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseTrajectoryReconstructionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseTrajectoryReconstructionInfo* internal_default_instance() {
    return reinterpret_cast<const ResponseTrajectoryReconstructionInfo*>(
               &_ResponseTrajectoryReconstructionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ResponseTrajectoryReconstructionInfo* other);
  friend void swap(ResponseTrajectoryReconstructionInfo& a, ResponseTrajectoryReconstructionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseTrajectoryReconstructionInfo* New() const final {
    return CreateMaybeMessage<ResponseTrajectoryReconstructionInfo>(NULL);
  }

  ResponseTrajectoryReconstructionInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseTrajectoryReconstructionInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseTrajectoryReconstructionInfo& from);
  void MergeFrom(const ResponseTrajectoryReconstructionInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseTrajectoryReconstructionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ForceMasterRpc.ResponseCommon header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::ForceMasterRpc::ResponseCommon& _internal_header() const;
  public:
  const ::ForceMasterRpc::ResponseCommon& header() const;
  ::ForceMasterRpc::ResponseCommon* release_header();
  ::ForceMasterRpc::ResponseCommon* mutable_header();
  void set_allocated_header(::ForceMasterRpc::ResponseCommon* header);

  // .ForceMasterRpc.TrajectoryReconstructionInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  private:
  const ::ForceMasterRpc::TrajectoryReconstructionInfo& _internal_info() const;
  public:
  const ::ForceMasterRpc::TrajectoryReconstructionInfo& info() const;
  ::ForceMasterRpc::TrajectoryReconstructionInfo* release_info();
  ::ForceMasterRpc::TrajectoryReconstructionInfo* mutable_info();
  void set_allocated_info(::ForceMasterRpc::TrajectoryReconstructionInfo* info);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseTrajectoryReconstructionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ForceMasterRpc::ResponseCommon* header_;
  ::ForceMasterRpc::TrajectoryReconstructionInfo* info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrajectoryReconstructionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.TrajectoryReconstructionInfo) */ {
 public:
  TrajectoryReconstructionInfo();
  virtual ~TrajectoryReconstructionInfo();

  TrajectoryReconstructionInfo(const TrajectoryReconstructionInfo& from);

  inline TrajectoryReconstructionInfo& operator=(const TrajectoryReconstructionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrajectoryReconstructionInfo(TrajectoryReconstructionInfo&& from) noexcept
    : TrajectoryReconstructionInfo() {
    *this = ::std::move(from);
  }

  inline TrajectoryReconstructionInfo& operator=(TrajectoryReconstructionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrajectoryReconstructionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryReconstructionInfo* internal_default_instance() {
    return reinterpret_cast<const TrajectoryReconstructionInfo*>(
               &_TrajectoryReconstructionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(TrajectoryReconstructionInfo* other);
  friend void swap(TrajectoryReconstructionInfo& a, TrajectoryReconstructionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryReconstructionInfo* New() const final {
    return CreateMaybeMessage<TrajectoryReconstructionInfo>(NULL);
  }

  TrajectoryReconstructionInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrajectoryReconstructionInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrajectoryReconstructionInfo& from);
  void MergeFrom(const TrajectoryReconstructionInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrajectoryReconstructionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 repeated_count = 1;
  void clear_repeated_count();
  static const int kRepeatedCountFieldNumber = 1;
  ::google::protobuf::int32 repeated_count() const;
  void set_repeated_count(::google::protobuf::int32 value);

  // int32 speed_ratio = 2;
  void clear_speed_ratio();
  static const int kSpeedRatioFieldNumber = 2;
  ::google::protobuf::int32 speed_ratio() const;
  void set_speed_ratio(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.TrajectoryReconstructionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 repeated_count_;
  ::google::protobuf::int32 speed_ratio_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseSensorStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ForceMasterRpc.ResponseSensorStatus) */ {
 public:
  ResponseSensorStatus();
  virtual ~ResponseSensorStatus();

  ResponseSensorStatus(const ResponseSensorStatus& from);

  inline ResponseSensorStatus& operator=(const ResponseSensorStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseSensorStatus(ResponseSensorStatus&& from) noexcept
    : ResponseSensorStatus() {
    *this = ::std::move(from);
  }

  inline ResponseSensorStatus& operator=(ResponseSensorStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseSensorStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseSensorStatus* internal_default_instance() {
    return reinterpret_cast<const ResponseSensorStatus*>(
               &_ResponseSensorStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ResponseSensorStatus* other);
  friend void swap(ResponseSensorStatus& a, ResponseSensorStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseSensorStatus* New() const final {
    return CreateMaybeMessage<ResponseSensorStatus>(NULL);
  }

  ResponseSensorStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseSensorStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseSensorStatus& from);
  void MergeFrom(const ResponseSensorStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseSensorStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ForceMasterRpc.ResponseCommon header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::ForceMasterRpc::ResponseCommon& _internal_header() const;
  public:
  const ::ForceMasterRpc::ResponseCommon& header() const;
  ::ForceMasterRpc::ResponseCommon* release_header();
  ::ForceMasterRpc::ResponseCommon* mutable_header();
  void set_allocated_header(::ForceMasterRpc::ResponseCommon* header);

  // bool status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:ForceMasterRpc.ResponseSensorStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ForceMasterRpc::ResponseCommon* header_;
  bool status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_force_5fmaster_5frpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JointPosition

// int32 joint_num = 1;
inline void JointPosition::clear_joint_num() {
  joint_num_ = 0;
}
inline ::google::protobuf::int32 JointPosition::joint_num() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.JointPosition.joint_num)
  return joint_num_;
}
inline void JointPosition::set_joint_num(::google::protobuf::int32 value) {
  
  joint_num_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.JointPosition.joint_num)
}

// repeated double joint = 2;
inline int JointPosition::joint_size() const {
  return joint_.size();
}
inline void JointPosition::clear_joint() {
  joint_.Clear();
}
inline double JointPosition::joint(int index) const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.JointPosition.joint)
  return joint_.Get(index);
}
inline void JointPosition::set_joint(int index, double value) {
  joint_.Set(index, value);
  // @@protoc_insertion_point(field_set:ForceMasterRpc.JointPosition.joint)
}
inline void JointPosition::add_joint(double value) {
  joint_.Add(value);
  // @@protoc_insertion_point(field_add:ForceMasterRpc.JointPosition.joint)
}
inline const ::google::protobuf::RepeatedField< double >&
JointPosition::joint() const {
  // @@protoc_insertion_point(field_list:ForceMasterRpc.JointPosition.joint)
  return joint_;
}
inline ::google::protobuf::RepeatedField< double >*
JointPosition::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:ForceMasterRpc.JointPosition.joint)
  return &joint_;
}

// -------------------------------------------------------------------

// Level

// int32 level = 1;
inline void Level::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 Level::level() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.Level.level)
  return level_;
}
inline void Level::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.Level.level)
}

// -------------------------------------------------------------------

// CartPosition

// double x = 1;
inline void CartPosition::clear_x() {
  x_ = 0;
}
inline double CartPosition::x() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.x)
  return x_;
}
inline void CartPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.x)
}

// double y = 2;
inline void CartPosition::clear_y() {
  y_ = 0;
}
inline double CartPosition::y() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.y)
  return y_;
}
inline void CartPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.y)
}

// double z = 3;
inline void CartPosition::clear_z() {
  z_ = 0;
}
inline double CartPosition::z() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.z)
  return z_;
}
inline void CartPosition::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.z)
}

// double a = 4;
inline void CartPosition::clear_a() {
  a_ = 0;
}
inline double CartPosition::a() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.a)
  return a_;
}
inline void CartPosition::set_a(double value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.a)
}

// double b = 5;
inline void CartPosition::clear_b() {
  b_ = 0;
}
inline double CartPosition::b() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.b)
  return b_;
}
inline void CartPosition::set_b(double value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.b)
}

// double c = 6;
inline void CartPosition::clear_c() {
  c_ = 0;
}
inline double CartPosition::c() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.CartPosition.c)
  return c_;
}
inline void CartPosition::set_c(double value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.CartPosition.c)
}

// -------------------------------------------------------------------

// ResponseCartPosition

// .ForceMasterRpc.ResponseCommon header = 1;
inline bool ResponseCartPosition::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResponseCartPosition::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseCartPosition::_internal_header() const {
  return *header_;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseCartPosition::header() const {
  const ::ForceMasterRpc::ResponseCommon* p = header_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseCartPosition.header)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::ResponseCommon*>(
      &::ForceMasterRpc::_ResponseCommon_default_instance_);
}
inline ::ForceMasterRpc::ResponseCommon* ResponseCartPosition::release_header() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseCartPosition.header)
  
  ::ForceMasterRpc::ResponseCommon* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::ResponseCommon* ResponseCartPosition::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseCartPosition.header)
  return header_;
}
inline void ResponseCartPosition::set_allocated_header(::ForceMasterRpc::ResponseCommon* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseCartPosition.header)
}

// .ForceMasterRpc.CartPosition position = 2;
inline bool ResponseCartPosition::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void ResponseCartPosition::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::ForceMasterRpc::CartPosition& ResponseCartPosition::_internal_position() const {
  return *position_;
}
inline const ::ForceMasterRpc::CartPosition& ResponseCartPosition::position() const {
  const ::ForceMasterRpc::CartPosition* p = position_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseCartPosition.position)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::CartPosition*>(
      &::ForceMasterRpc::_CartPosition_default_instance_);
}
inline ::ForceMasterRpc::CartPosition* ResponseCartPosition::release_position() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseCartPosition.position)
  
  ::ForceMasterRpc::CartPosition* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::CartPosition* ResponseCartPosition::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::CartPosition>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseCartPosition.position)
  return position_;
}
inline void ResponseCartPosition::set_allocated_position(::ForceMasterRpc::CartPosition* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseCartPosition.position)
}

// -------------------------------------------------------------------

// ResponseCommon

// bool is_successful = 1;
inline void ResponseCommon::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResponseCommon::is_successful() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseCommon.is_successful)
  return is_successful_;
}
inline void ResponseCommon::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.ResponseCommon.is_successful)
}

// string error_str = 2;
inline void ResponseCommon::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseCommon::error_str() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseCommon.error_str)
  return error_str_.GetNoArena();
}
inline void ResponseCommon::set_error_str(const ::std::string& value) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForceMasterRpc.ResponseCommon.error_str)
}
#if LANG_CXX11
inline void ResponseCommon::set_error_str(::std::string&& value) {
  
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ForceMasterRpc.ResponseCommon.error_str)
}
#endif
inline void ResponseCommon::set_error_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForceMasterRpc.ResponseCommon.error_str)
}
inline void ResponseCommon::set_error_str(const char* value, size_t size) {
  
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForceMasterRpc.ResponseCommon.error_str)
}
inline ::std::string* ResponseCommon::mutable_error_str() {
  
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseCommon.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseCommon::release_error_str() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseCommon.error_str)
  
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseCommon::set_allocated_error_str(::std::string* error_str) {
  if (error_str != NULL) {
    
  } else {
    
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseCommon.error_str)
}

// -------------------------------------------------------------------

// ResponseJointPosition

// .ForceMasterRpc.ResponseCommon header = 1;
inline bool ResponseJointPosition::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResponseJointPosition::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseJointPosition::_internal_header() const {
  return *header_;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseJointPosition::header() const {
  const ::ForceMasterRpc::ResponseCommon* p = header_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseJointPosition.header)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::ResponseCommon*>(
      &::ForceMasterRpc::_ResponseCommon_default_instance_);
}
inline ::ForceMasterRpc::ResponseCommon* ResponseJointPosition::release_header() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseJointPosition.header)
  
  ::ForceMasterRpc::ResponseCommon* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::ResponseCommon* ResponseJointPosition::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseJointPosition.header)
  return header_;
}
inline void ResponseJointPosition::set_allocated_header(::ForceMasterRpc::ResponseCommon* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseJointPosition.header)
}

// .ForceMasterRpc.JointPosition position = 2;
inline bool ResponseJointPosition::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void ResponseJointPosition::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::ForceMasterRpc::JointPosition& ResponseJointPosition::_internal_position() const {
  return *position_;
}
inline const ::ForceMasterRpc::JointPosition& ResponseJointPosition::position() const {
  const ::ForceMasterRpc::JointPosition* p = position_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseJointPosition.position)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::JointPosition*>(
      &::ForceMasterRpc::_JointPosition_default_instance_);
}
inline ::ForceMasterRpc::JointPosition* ResponseJointPosition::release_position() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseJointPosition.position)
  
  ::ForceMasterRpc::JointPosition* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::JointPosition* ResponseJointPosition::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::JointPosition>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseJointPosition.position)
  return position_;
}
inline void ResponseJointPosition::set_allocated_position(::ForceMasterRpc::JointPosition* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseJointPosition.position)
}

// -------------------------------------------------------------------

// ResponseLevel

// .ForceMasterRpc.ResponseCommon header = 1;
inline bool ResponseLevel::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResponseLevel::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseLevel::_internal_header() const {
  return *header_;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseLevel::header() const {
  const ::ForceMasterRpc::ResponseCommon* p = header_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseLevel.header)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::ResponseCommon*>(
      &::ForceMasterRpc::_ResponseCommon_default_instance_);
}
inline ::ForceMasterRpc::ResponseCommon* ResponseLevel::release_header() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseLevel.header)
  
  ::ForceMasterRpc::ResponseCommon* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::ResponseCommon* ResponseLevel::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseLevel.header)
  return header_;
}
inline void ResponseLevel::set_allocated_header(::ForceMasterRpc::ResponseCommon* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseLevel.header)
}

// int32 level = 2;
inline void ResponseLevel::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 ResponseLevel::level() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseLevel.level)
  return level_;
}
inline void ResponseLevel::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.ResponseLevel.level)
}

// -------------------------------------------------------------------

// ResponseTrajectoryReconstructionInfo

// .ForceMasterRpc.ResponseCommon header = 1;
inline bool ResponseTrajectoryReconstructionInfo::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResponseTrajectoryReconstructionInfo::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseTrajectoryReconstructionInfo::_internal_header() const {
  return *header_;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseTrajectoryReconstructionInfo::header() const {
  const ::ForceMasterRpc::ResponseCommon* p = header_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.header)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::ResponseCommon*>(
      &::ForceMasterRpc::_ResponseCommon_default_instance_);
}
inline ::ForceMasterRpc::ResponseCommon* ResponseTrajectoryReconstructionInfo::release_header() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.header)
  
  ::ForceMasterRpc::ResponseCommon* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::ResponseCommon* ResponseTrajectoryReconstructionInfo::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.header)
  return header_;
}
inline void ResponseTrajectoryReconstructionInfo::set_allocated_header(::ForceMasterRpc::ResponseCommon* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.header)
}

// .ForceMasterRpc.TrajectoryReconstructionInfo info = 2;
inline bool ResponseTrajectoryReconstructionInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void ResponseTrajectoryReconstructionInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::ForceMasterRpc::TrajectoryReconstructionInfo& ResponseTrajectoryReconstructionInfo::_internal_info() const {
  return *info_;
}
inline const ::ForceMasterRpc::TrajectoryReconstructionInfo& ResponseTrajectoryReconstructionInfo::info() const {
  const ::ForceMasterRpc::TrajectoryReconstructionInfo* p = info_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.info)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::TrajectoryReconstructionInfo*>(
      &::ForceMasterRpc::_TrajectoryReconstructionInfo_default_instance_);
}
inline ::ForceMasterRpc::TrajectoryReconstructionInfo* ResponseTrajectoryReconstructionInfo::release_info() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.info)
  
  ::ForceMasterRpc::TrajectoryReconstructionInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::TrajectoryReconstructionInfo* ResponseTrajectoryReconstructionInfo::mutable_info() {
  
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::TrajectoryReconstructionInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.info)
  return info_;
}
inline void ResponseTrajectoryReconstructionInfo::set_allocated_info(::ForceMasterRpc::TrajectoryReconstructionInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseTrajectoryReconstructionInfo.info)
}

// -------------------------------------------------------------------

// TrajectoryReconstructionInfo

// int32 repeated_count = 1;
inline void TrajectoryReconstructionInfo::clear_repeated_count() {
  repeated_count_ = 0;
}
inline ::google::protobuf::int32 TrajectoryReconstructionInfo::repeated_count() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.TrajectoryReconstructionInfo.repeated_count)
  return repeated_count_;
}
inline void TrajectoryReconstructionInfo::set_repeated_count(::google::protobuf::int32 value) {
  
  repeated_count_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.TrajectoryReconstructionInfo.repeated_count)
}

// int32 speed_ratio = 2;
inline void TrajectoryReconstructionInfo::clear_speed_ratio() {
  speed_ratio_ = 0;
}
inline ::google::protobuf::int32 TrajectoryReconstructionInfo::speed_ratio() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.TrajectoryReconstructionInfo.speed_ratio)
  return speed_ratio_;
}
inline void TrajectoryReconstructionInfo::set_speed_ratio(::google::protobuf::int32 value) {
  
  speed_ratio_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.TrajectoryReconstructionInfo.speed_ratio)
}

// -------------------------------------------------------------------

// ResponseSensorStatus

// .ForceMasterRpc.ResponseCommon header = 1;
inline bool ResponseSensorStatus::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResponseSensorStatus::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseSensorStatus::_internal_header() const {
  return *header_;
}
inline const ::ForceMasterRpc::ResponseCommon& ResponseSensorStatus::header() const {
  const ::ForceMasterRpc::ResponseCommon* p = header_;
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseSensorStatus.header)
  return p != NULL ? *p : *reinterpret_cast<const ::ForceMasterRpc::ResponseCommon*>(
      &::ForceMasterRpc::_ResponseCommon_default_instance_);
}
inline ::ForceMasterRpc::ResponseCommon* ResponseSensorStatus::release_header() {
  // @@protoc_insertion_point(field_release:ForceMasterRpc.ResponseSensorStatus.header)
  
  ::ForceMasterRpc::ResponseCommon* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::ForceMasterRpc::ResponseCommon* ResponseSensorStatus::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::ForceMasterRpc::ResponseCommon>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ForceMasterRpc.ResponseSensorStatus.header)
  return header_;
}
inline void ResponseSensorStatus::set_allocated_header(::ForceMasterRpc::ResponseCommon* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:ForceMasterRpc.ResponseSensorStatus.header)
}

// bool status = 2;
inline void ResponseSensorStatus::clear_status() {
  status_ = false;
}
inline bool ResponseSensorStatus::status() const {
  // @@protoc_insertion_point(field_get:ForceMasterRpc.ResponseSensorStatus.status)
  return status_;
}
inline void ResponseSensorStatus::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ForceMasterRpc.ResponseSensorStatus.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ForceMasterRpc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ForceMasterRpc::MessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ForceMasterRpc::MessageType>() {
  return ::ForceMasterRpc::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_force_5fmaster_5frpc_2eproto
